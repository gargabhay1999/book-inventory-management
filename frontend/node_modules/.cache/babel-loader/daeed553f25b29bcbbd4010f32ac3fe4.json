{"ast":null,"code":"var _jsxFileName = \"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react'; // import BookCard from './BookCard';\n\nimport './Box.css';\nimport Form from './Form';\nimport { Card, Button } from 'react-bootstrap';\nimport APIService from '../components/APIService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookList(props) {\n  _s();\n\n  const [editedBook, setEditedBook] = useState(null);\n\n  const editBook = book => {\n    setEditedBook(book);\n  };\n\n  const deleteBook = googleId => {\n    console.log(googleId);\n    APIService.DeleteBook(googleId).then(resp => props.deleteBook(resp)).catch(error => console.log(error));\n  };\n\n  const renderCard = (book, index) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: book.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Authors: \", book.authors, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), \"Published Date:\", book.publishedDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), \"Available Qty: \", book.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), book.quantity == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"OUT OF STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => editBook(book),\n            children: \"Manage Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-danger\",\n            onClick: () => deleteBook(book.googleId),\n            children: \"Remove Books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this) : null, book.quantity > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Available Qty: \", book.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => editBook(book),\n            children: \"Manage Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-danger\",\n            onClick: () => deleteBook(book.googleId),\n            children: \"Remove Books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this) : null, book.quantity < 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"NOT AVAILABLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-success\",\n            onClick: () => editBook(book.book),\n            children: \"Add Book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [editedBook ? /*#__PURE__*/_jsxDEV(Form, {\n      book: editedBook,\n      updatedBook: props.updatedBook,\n      insertedBook: props.insertedBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(CardGroup, {\n      children: props.books.map(renderCard)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookList, \"q4OHXJceYElYLnYzNqkqpkDPmy8=\");\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookList.js"],"names":["React","useState","Form","Card","Button","APIService","BookList","props","editedBook","setEditedBook","editBook","book","deleteBook","googleId","console","log","DeleteBook","then","resp","catch","error","renderCard","index","width","imageUrl","title","authors","publishedDate","quantity","updatedBook","insertedBook","books","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useState} from 'react';\n// import BookCard from './BookCard';\nimport './Box.css';\nimport Form from './Form';\nimport {Card, Button} from 'react-bootstrap';\nimport APIService from '../components/APIService';\n\nfunction BookList(props) {\n\n    const [editedBook, setEditedBook] = useState(null)\n\n    const editBook = (book) => {\n        setEditedBook(book)\n    }\n\n    const deleteBook = (googleId) => {\n        console.log(googleId)\n        APIService.DeleteBook(googleId)\n            .then(resp => props.deleteBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    const renderCard = (book, index) => {\n        return (\n            <Card style={{ width: '18rem' }} key={index}>\n            <Card.Img variant=\"top\" src={book.imageUrl} />\n            <Card.Body>\n                <Card.Title>{book.title}</Card.Title>\n                <Card.Text>\n                    Authors: {book.authors}\n                    <br></br>\n                    Published Date:{book.publishedDate}\n                    <br></br>\n                    Available Qty: {book.quantity}\n                </Card.Text>\n                {book.quantity == 0 ?\n                    <div>\n                        <h5>OUT OF STOCK</h5> \n                        <Button variant=\"primary\" onClick={ () => editBook(book)}>Manage Inventory</Button>\n                        <br/><br/>\n                        <Button className=\"btn btn-danger\" onClick={ () => deleteBook(book.googleId)}>Remove Books</Button>\n                    </div>\n                    : null}\n                {book.quantity > 0 ?\n                    <div>\n                        <h5>Available Qty: {book.quantity}</h5> \n                        <Button variant=\"primary\" onClick={ () => editBook(book)}>Manage Inventory</Button>\n                        <br/><br/>\n                        <Button className=\"btn btn-danger\" onClick={ () => deleteBook(book.googleId)}>Remove Books</Button>\n                    </div>\n                    : null}\n                {book.quantity < 0 ?\n                <div>\n                    <h5>NOT AVAILABLE</h5> \n                    <Button className=\"btn btn-success\" onClick={ () => editBook(book.book)}>Add Book</Button>\n                </div>\n                : null}\n            </Card.Body>\n            </Card>\n        )\n    }\n\n    return (\n        <div>\n            {editedBook ? <Form book={editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null }\n            {/* <div className=\"grid\">{props.books.map(renderCard)}</div> */}\n            <CardGroup>{props.books.map(renderCard)}</CardGroup>\n        </div>\n    )\n}\n\nexport default BookList"]},"metadata":{},"sourceType":"module"}