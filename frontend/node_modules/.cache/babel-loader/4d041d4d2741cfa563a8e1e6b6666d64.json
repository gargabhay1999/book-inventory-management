{"ast":null,"code":"var _jsxFileName = \"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/Books.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Search from './Search';\nimport BookList from './BookList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Books() {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  useEffect(() => {\n    fetch('https://eflask-app-abhay.herokuapp.com/getBooks', {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'applications/json'\n      }\n    }).then(resp => resp.json()).then(resp => setBooks(resp)).catch(error => console.log(error));\n  }, []);\n\n  const searchBook = e => {\n    e.preventDefault();\n    console.log(searchBook);\n    return fetch(`https://eflask-app-abhay.herokuapp.com/getFinalBooks?searchText=${searchText}`, {\n      'method': 'GET',\n      headers: {\n        'Content-Type': 'applications/json'\n      }\n    }).then(resp => resp.json()).then(resp => setBooks(resp)).catch(error => console.log(error));\n  };\n\n  const handleSearch = e => {\n    setSearchText(e.target.value);\n  };\n\n  const deleteBook = book => {\n    const new_books = books.filter(my_book => {\n      if (my_book.googleId === book.googleId) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    setBooks(new_books);\n  };\n\n  const updatedBook = book => {\n    const updatedBooks = books.map(my_book => {\n      if (my_book.googleId === book.googleId) {\n        return book;\n      } else {\n        return my_book;\n      }\n    });\n    setBooks(updatedBooks);\n  };\n\n  const insertedBook = book => {\n    const new_books = [...books, book];\n    setBooks(new_books);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleSearch: handleSearch,\n      searchBook: searchBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BookList, {\n      books: books,\n      deleteBook: deleteBook,\n      updatedBook: updatedBook,\n      insertedBook: insertedBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Books, \"ilDWC0xFQOH7pG6Q+WJWlChqnXI=\");\n\n_c = Books;\nexport default Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/Books.js"],"names":["React","useState","useEffect","Search","BookList","Books","books","setBooks","searchText","setSearchText","fetch","headers","then","resp","json","catch","error","console","log","searchBook","e","preventDefault","handleSearch","target","value","deleteBook","book","new_books","filter","my_book","googleId","updatedBook","updatedBooks","map","insertedBook"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport Search from './Search';\nimport BookList from './BookList';\n\nfunction Books() {\n\n    const [books, setBooks] = useState([])\n    const [searchText, setSearchText] = useState('')\n\n\n    useEffect(() => {\n        fetch('https://eflask-app-abhay.herokuapp.com/getBooks', {\n            'method': 'GET',\n            headers: {\n                'Content-Type': 'applications/json'\n            }\n        })\n            .then(resp => resp.json())\n            .then(resp => setBooks(resp))\n            .catch(error => console.log(error))\n    }, [])\n\n\n    const searchBook = (e) => {\n        e.preventDefault()\n        console.log(searchBook)\n        return fetch(`https://eflask-app-abhay.herokuapp.com/getFinalBooks?searchText=${searchText}`, {\n            'method': 'GET',\n            headers: {\n                'Content-Type': 'applications/json'\n            }\n        })\n            .then(resp => resp.json())\n            .then(resp => setBooks(resp))\n            .catch(error => console.log(error))\n    }\n\n    const handleSearch = (e) => {\n        setSearchText(e.target.value)\n    }\n\n    const deleteBook = (book) => {\n        const new_books = books.filter(my_book => {\n            if (my_book.googleId === book.googleId) {\n                return false\n            } else {\n                return true\n            }\n        })\n        setBooks(new_books)\n    }\n\n    const updatedBook = (book) => {\n        const updatedBooks = books.map(my_book => {\n            if (my_book.googleId === book.googleId) {\n                return book\n            } else {\n                return my_book\n            }\n        })\n        setBooks(updatedBooks)\n    }\n\n    const insertedBook = (book) => {\n        const new_books = [...books, book]\n        setBooks(new_books)\n      }\n\n    return (\n        <div>\n            <Search handleSearch={handleSearch} searchBook={searchBook} />\n            <BookList books={books} deleteBook={deleteBook} updatedBook={updatedBook} insertedBook={insertedBook} />\n        </div>\n    )\n}\n\nexport default Books\n"]},"metadata":{},"sourceType":"module"}