{"ast":null,"code":"var _jsxFileName = \"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport BookCard from './BookCard';\nimport Form from './Form';\nimport { Card, CardGroup, Button } from 'react-bootstrap';\nimport APIService from '../components/APIService';\nimport { Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookList(props) {\n  _s();\n\n  const [editedBook, setEditedBook] = useState(null);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const editBook = book => {\n    setEditedBook(book);\n    setShow(true);\n  };\n\n  const deleteBook = googleId => {\n    console.log(googleId);\n    APIService.DeleteBook(googleId).then(resp => props.deleteBook(resp)).catch(error => console.log(error));\n  };\n\n  const renderCard = (book, index) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        src: book.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Authors: \", book.authors]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Published Date:\", book.publishedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), book.quantity == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              color: 'red',\n              fontSize: '18px'\n            },\n            children: \"OUT OF STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => editBook(book),\n            children: \"Manage Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-danger\",\n            onClick: () => deleteBook(book.googleId),\n            children: \"Remove Books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this) : null, book.quantity > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              color: 'green',\n              fontSize: '18px'\n            },\n            children: [\"Available Qty: \", book.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => editBook(book),\n            children: \"Manage Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-danger\",\n            onClick: () => deleteBook(book.googleId),\n            children: \"Remove Books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this) : null, book.quantity < 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              color: 'yellow',\n              fontSize: '18px'\n            },\n            children: \"NOT AVAILABLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-success\",\n            onClick: () => editBook(book),\n            children: \"Add Book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this) : null, /*#__PURE__*/_jsxDEV(Modal, {\n          show: show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Modal heading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: \"Woohoo, you're reading this text in a modal!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleClose,\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }; // return (\n  //     <div>\n  //         {editedBook ? <Form book={editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null }\n  //         {/* <div className=\"grid\">{props.books.map(renderCard)}</div> */}\n  //         {/* <CardGroup>{props.books.map(renderCard)}</CardGroup> */}\n  //     </div>\n  // )\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), props.books.map((book, i) => {\n      return /*#__PURE__*/_jsxDEV(BookCard, {\n        googleId: book.googleId,\n        imageUrl: book.imageUrl,\n        title: book.title,\n        authors: book.authors,\n        publishedDate: book.publishedDate,\n        quantity: book.quantity,\n        deleteBook: props.deleteBook,\n        editBook: editBook,\n        editedBook: editedBook,\n        updatedBook: props.updatedBook,\n        insertedBook: props.insertedBook,\n        book: book\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookList, \"zfSqC6mn4UWmp+Z4aBZ624KbaQ0=\");\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookList.js"],"names":["React","useState","BookCard","Form","Card","CardGroup","Button","APIService","Modal","BookList","props","editedBook","setEditedBook","show","setShow","handleClose","handleShow","editBook","book","deleteBook","googleId","console","log","DeleteBook","then","resp","catch","error","renderCard","index","imageUrl","title","authors","publishedDate","quantity","color","fontSize","books","map","i","updatedBook","insertedBook"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,IAAR,EAAcC,SAAd,EAAyBC,MAAzB,QAAsC,iBAAtC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,KAAT,QAAsB,iBAAtB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMc,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEA,QAAMG,QAAQ,GAAIC,IAAD,IAAU;AACvBN,IAAAA,aAAa,CAACM,IAAD,CAAb;AACAJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAHD;;AAKA,QAAMK,UAAU,GAAIC,QAAD,IAAc;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAb,IAAAA,UAAU,CAACgB,UAAX,CAAsBH,QAAtB,EACKI,IADL,CACUC,IAAI,IAAIf,KAAK,CAACS,UAAN,CAAiBM,IAAjB,CADlB,EAEKC,KAFL,CAEWC,KAAK,IAAIN,OAAO,CAACC,GAAR,CAAYK,KAAZ,CAFpB;AAGH,GALD;;AAOA,QAAMC,UAAU,GAAG,CAACV,IAAD,EAAOW,KAAP,KAAiB;AAChC,wBACI,QAAC,IAAD;AAAA,8BACA,QAAC,IAAD,CAAM,GAAN;AAAW,QAAA,GAAG,EAAEX,IAAI,CAACY;AAArB;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaZ,IAAI,CAACa;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,kCACA;AAAA,oCAAcb,IAAI,CAACc,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,0CAAoBd,IAAI,CAACe,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAQKf,IAAI,CAACgB,QAAL,IAAiB,CAAjB,gBACG;AAAA,kCACI;AAAI,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,KAAT;AAAiBC,cAAAA,QAAQ,EAAC;AAA1B,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAG,MAAMnB,QAAQ,CAACC,IAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAGS;AAAA;AAAA;AAAA;AAAA,kBAHT,eAII,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,gBAAlB;AAAmC,YAAA,OAAO,EAAG,MAAMC,UAAU,CAACD,IAAI,CAACE,QAAN,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,GAOK,IAfV,EAgBKF,IAAI,CAACgB,QAAL,GAAgB,CAAhB,gBACG;AAAA,kCACI;AAAI,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,OAAT;AAAmBC,cAAAA,QAAQ,EAAC;AAA5B,aAAX;AAAA,0CAAgElB,IAAI,CAACgB,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAG,MAAMjB,QAAQ,CAACC,IAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAGS;AAAA;AAAA;AAAA;AAAA,kBAHT,eAII,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,gBAAlB;AAAmC,YAAA,OAAO,EAAG,MAAMC,UAAU,CAACD,IAAI,CAACE,QAAN,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,GAOK,IAvBV,EAwBKF,IAAI,CAACgB,QAAL,GAAgB,CAAhB,gBACD;AAAA,kCACI;AAAI,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,QAAT;AAAoBC,cAAAA,QAAQ,EAAC;AAA7B,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,OAAO,EAAG,MAAMnB,QAAQ,CAACC,IAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC,GAKC,IA7BN,eA8BI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEL,IAAb;AAAmB,UAAA,MAAM,EAAEE,WAA3B;AAAA,kCACA,QAAC,KAAD,CAAO,MAAP;AAAc,YAAA,WAAW,MAAzB;AAAA,mCACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKA,QAAC,KAAD,CAAO,MAAP;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,OAAO,EAAEA,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,OAAO,EAAEA,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,OAAYc,KAAZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAmDH,GApDD,CArBqB,CA2ErB;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACI;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIQnB,KAAK,CAAC2B,KAAN,CAAYC,GAAZ,CAAgB,CAACpB,IAAD,EAAMqB,CAAN,KAAY;AACxB,0BAAO,QAAC,QAAD;AAEH,QAAA,QAAQ,EAAErB,IAAI,CAACE,QAFZ;AAGH,QAAA,QAAQ,EAAEF,IAAI,CAACY,QAHZ;AAIH,QAAA,KAAK,EAAEZ,IAAI,CAACa,KAJT;AAKH,QAAA,OAAO,EAAEb,IAAI,CAACc,OALX;AAMH,QAAA,aAAa,EAAEd,IAAI,CAACe,aANjB;AAOH,QAAA,QAAQ,EAAEf,IAAI,CAACgB,QAPZ;AASH,QAAA,UAAU,EAAExB,KAAK,CAACS,UATf;AAUH,QAAA,QAAQ,EAAEF,QAVP;AAWH,QAAA,UAAU,EAAEN,UAXT;AAYH,QAAA,WAAW,EAAED,KAAK,CAAC8B,WAZhB;AAaH,QAAA,YAAY,EAAE9B,KAAK,CAAC+B,YAbjB;AAcH,QAAA,IAAI,EAAEvB;AAdH,SACEqB,CADF;AAAA;AAAA;AAAA;AAAA,cAAP;AAiBH,KAlBD,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GAhHQ9B,Q;;KAAAA,Q;AAkHT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport {useState} from 'react';\nimport BookCard from './BookCard';\nimport Form from './Form';\nimport {Card, CardGroup, Button} from 'react-bootstrap';\nimport APIService from '../components/APIService';\nimport { Modal } from 'react-bootstrap';\n\nfunction BookList(props) {\n\n    const [editedBook, setEditedBook] = useState(null)\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const editBook = (book) => {\n        setEditedBook(book)\n        setShow(true)\n    }\n\n    const deleteBook = (googleId) => {\n        console.log(googleId)\n        APIService.DeleteBook(googleId)\n            .then(resp => props.deleteBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    const renderCard = (book, index) => {\n        return (\n            <Card  key={index}>\n            <Card.Img  src={book.imageUrl} />\n            <Card.Body>\n                <Card.Title>{book.title}</Card.Title>\n                <Card.Text>\n                <h5>Authors: {book.authors}</h5>\n                    <br></br>\n                    <h5>Published Date:{book.publishedDate}</h5>\n                    <br></br>\n                </Card.Text>\n                {book.quantity == 0 ?\n                    <div>\n                        <h5 style={{ color: 'red' , fontSize:'18px'}}>OUT OF STOCK</h5> \n                        <Button variant=\"primary\" onClick={ () => editBook(book)}>Manage Inventory</Button>\n                        <br/><br/>\n                        <Button className=\"btn btn-danger\" onClick={ () => deleteBook(book.googleId)}>Remove Books</Button>\n                    </div>\n                    : null}\n                {book.quantity > 0 ?\n                    <div>\n                        <h5 style={{ color: 'green' , fontSize:'18px'}}>Available Qty: {book.quantity}</h5> \n                        <Button variant=\"primary\" onClick={ () => editBook(book)}>Manage Inventory</Button>\n                        <br/><br/>\n                        <Button className=\"btn btn-danger\" onClick={ () => deleteBook(book.googleId)}>Remove Books</Button>\n                    </div>\n                    : null}\n                {book.quantity < 0 ?\n                <div>\n                    <h5 style={{ color: 'yellow' , fontSize:'18px'}}>NOT AVAILABLE</h5> \n                    <Button className=\"btn btn-success\" onClick={ () => editBook(book)}>Add Book</Button>\n                </div>\n                : null}\n                <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                     </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                     </Button>\n                </Modal.Footer>\n            </Modal>\n            </Card.Body>\n            </Card>\n            \n        )\n    }\n\n    // return (\n    //     <div>\n    //         {editedBook ? <Form book={editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null }\n    //         {/* <div className=\"grid\">{props.books.map(renderCard)}</div> */}\n    //         {/* <CardGroup>{props.books.map(renderCard)}</CardGroup> */}\n    //     </div>\n    // )\n    return (\n        <div>\n            {/* {editedBook ? <Form book={editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null } */}\n            <hr/>\n            {\n                props.books.map((book,i) => {\n                    return <BookCard\n                        key={i}\n                        googleId={book.googleId}\n                        imageUrl={book.imageUrl}\n                        title={book.title}\n                        authors={book.authors}\n                        publishedDate={book.publishedDate}\n                        quantity={book.quantity}\n\n                        deleteBook={props.deleteBook}\n                        editBook={editBook}\n                        editedBook={editedBook}\n                        updatedBook={props.updatedBook}\n                        insertedBook={props.insertedBook}\n                        book={book}\n                        />\n                    \n                })\n            }\n            \n        </div>\n\n        \n    )\n}\n\nexport default BookList"]},"metadata":{},"sourceType":"module"}