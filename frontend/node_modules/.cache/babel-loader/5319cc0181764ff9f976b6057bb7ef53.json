{"ast":null,"code":"var _jsxFileName = \"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport APIService from '../components/APIService';\nimport { Card, Button, Modal } from 'react-bootstrap';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BookCard(props) {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const deleteBook = googleId => {\n    console.log(googleId);\n    APIService.DeleteBook(googleId).then(resp => props.deleteBook(resp)).catch(error => console.log(error));\n  };\n\n  const editBook = book => {\n    console.log(book);\n    props.editBook(book); // setShow(true)\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      id: props.googleId,\n      children: [props.editedBook == props.book ? /*#__PURE__*/_jsxDEV(Form, {\n        book: props.editedBook,\n        updatedBook: props.updatedBook,\n        insertedBook: props.insertedBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 45\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.imageUrl,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Title: \", props.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Author: \", props.authors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Published Date: \", props.publishedDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), props.quantity == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              color: 'red',\n              fontSize: '18px'\n            },\n            children: \"OUT OF STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: () => editBook(props.book),\n            children: \"Manage Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => deleteBook(props.googleId),\n            children: \"Remove Books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this) : null, props.quantity > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              color: 'green',\n              fontSize: '18px'\n            },\n            children: [\"Available Qty: \", props.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: () => editBook(props.book),\n            children: \"Manage Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => deleteBook(props.googleId),\n            children: \"Remove Books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this) : null, props.quantity < 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              color: 'yellow',\n              fontSize: '18px'\n            },\n            children: \"NOT AVAILABLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: () => editBook(props.book),\n            children: \"Add Book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          borderColor: 'orange',\n          backgroundColor: 'green',\n          height: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Modal heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: \"Woohoo, you're reading this text in a modal!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleClose,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(BookCard, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = BookCard;\nexport default BookCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookCard\");","map":{"version":3,"sources":["/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookCard.js"],"names":["React","useState","APIService","Card","Button","Modal","Form","BookCard","props","show","setShow","handleClose","handleShow","deleteBook","googleId","console","log","DeleteBook","then","resp","catch","error","editBook","book","editedBook","updatedBook","insertedBook","imageUrl","title","authors","publishedDate","quantity","color","fontSize","borderColor","backgroundColor","height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useState} from 'react';\nimport APIService from '../components/APIService';\nimport {Card, Button, Modal} from 'react-bootstrap';\nimport Form from './Form';\n\nfunction BookCard(props) {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const deleteBook = (googleId) => {\n        console.log(googleId)\n        APIService.DeleteBook(googleId)\n            .then(resp => props.deleteBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    const editBook = (book) => {\n        console.log(book)\n        props.editBook(book)\n        // setShow(true)\n    }\n\n    return (\n        <>\n        <div className=\"card-container\" id={props.googleId}>\n            {props.editedBook==props.book ? <Form book={props.editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null }\n            <img src={props.imageUrl} alt=\"\"/>\n            <div className=\"desc\">\n                <h5>Title: {props.title}</h5>\n                <h5>Author: {props.authors}</h5>\n                <h5>Published Date: {props.publishedDate}</h5>\n                {props.quantity == 0 ?\n                    <div>\n                        <h5 style={{ color: 'red' , fontSize:'18px'}}>OUT OF STOCK</h5> \n                        <button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Manage Inventory</button>\n                        <button className=\"btn btn-danger\" onClick={ () => deleteBook(props.googleId)}>Remove Books</button>\n                    </div>\n                    : null}\n                {props.quantity > 0 ?\n                    <div>\n                        <h5 style={{ color: 'green' , fontSize:'18px'}}>Available Qty: {props.quantity}</h5> \n                        <button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Manage Inventory</button>\n                        <button className=\"btn btn-danger\" onClick={ () => deleteBook(props.googleId)}>Remove Books</button>\n                    </div>\n                    : null}\n                {props.quantity < 0 ?\n                <div>\n                    <h5 style={{ color: 'yellow' , fontSize:'18px'}}>NOT AVAILABLE</h5> \n                    <button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Add Book</button>\n                </div>\n                : null}\n                \n            </div>\n            <hr style={{ borderColor: 'orange', backgroundColor: 'green', height: 2}}/>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                     </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                     </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n        </>\n\n    )\n}\n\nexport default BookCard\n"]},"metadata":{},"sourceType":"module"}