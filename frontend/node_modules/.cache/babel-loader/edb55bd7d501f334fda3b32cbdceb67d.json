{"ast":null,"code":"var _jsxFileName = \"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport BookCard from './BookCard';\nimport Form from './Form';\nimport { Card, Button } from 'react-bootstrap';\nimport APIService from '../components/APIService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookList(props) {\n  _s();\n\n  const [editedBook, setEditedBook] = useState(null);\n\n  const editBook = book => {\n    setEditedBook(book);\n  };\n\n  const deleteBook = googleId => {\n    console.log(googleId);\n    APIService.DeleteBook(googleId).then(resp => props.deleteBook(resp)).catch(error => console.log(error));\n  }; // const editBook = (book) => {\n  //     console.log(book)\n  //     props.editBook(book)\n  // }\n\n\n  const renderCard = (card, index) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: props.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Authors: \", props.authors, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), \"Published Date:\", props.publishedDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), \"Available Qty: \", props.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), props.quantity == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"OUT OF STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => editBook(props.book),\n            children: \"Manage Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-danger\",\n            onClick: () => deleteBook(props.googleId),\n            children: \"Remove Books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this) : null, props.quantity > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Available Qty: \", props.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => editBook(props.book),\n            children: \"Manage Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-danger\",\n            onClick: () => deleteBook(props.googleId),\n            children: \"Remove Books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this) : null, props.quantity < 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"NOT AVAILABLE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-success\",\n            onClick: () => editBook(props.book),\n            children: \"Add Book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, props.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: props.books.map((book, i) => {\n      renderCard(book, i);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 8\n  }, this); // return (\n  //     <div className=\"grid\">\n  //         {editedBook ? <Form book={editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null }\n  //         <hr/>\n  //         {\n  //             props.books.map((book,i) => {\n  //                 return <BookCard\n  //                     key={i}\n  //                     googleId={book.googleId}\n  //                     imageUrl={book.imageUrl}\n  //                     title={book.title}\n  //                     authors={book.authors}\n  //                     publishedDate={book.publishedDate}\n  //                     quantity={book.quantity}\n  //                     deleteBook={props.deleteBook}\n  //                     editBook={editBook}\n  //                     book={book}\n  //                     />\n  //             })\n  //         }\n  //     </div>\n  // )\n}\n\n_s(BookList, \"q4OHXJceYElYLnYzNqkqpkDPmy8=\");\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookList.js"],"names":["React","useState","BookCard","Form","Card","Button","APIService","BookList","props","editedBook","setEditedBook","editBook","book","deleteBook","googleId","console","log","DeleteBook","then","resp","catch","error","renderCard","card","index","width","imageUrl","title","authors","publishedDate","quantity","key","books","map","i"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useState} from 'react';\nimport BookCard from './BookCard';\nimport Form from './Form';\nimport {Card, Button} from 'react-bootstrap';\nimport APIService from '../components/APIService';\n\nfunction BookList(props) {\n\n    const [editedBook, setEditedBook] = useState(null)\n\n    const editBook = (book) => {\n        setEditedBook(book)\n    }\n\n    const deleteBook = (googleId) => {\n        console.log(googleId)\n        APIService.DeleteBook(googleId)\n            .then(resp => props.deleteBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    // const editBook = (book) => {\n    //     console.log(book)\n    //     props.editBook(book)\n    // }\n\n    const renderCard = (card, index) => {\n        return (\n            <Card style={{ width: '18rem' }} key={props.key} className=\"box\">\n            <Card.Img variant=\"top\" src={props.imageUrl} />\n            <Card.Body>\n                <Card.Title>{props.title}</Card.Title>\n                <Card.Text>\n                    Authors: {props.authors}\n                    <br></br>\n                    Published Date:{props.publishedDate}\n                    <br></br>\n                    Available Qty: {props.quantity}\n                </Card.Text>\n                {props.quantity == 0 ?\n                    <div>\n                        <h5>OUT OF STOCK</h5> \n                        <Button variant=\"primary\" onClick={ () => editBook(props.book)}>Manage Inventory</Button>\n                        <br/><br/>\n                        <Button className=\"btn btn-danger\" onClick={ () => deleteBook(props.googleId)}>Remove Books</Button>\n                    </div>\n                    : null}\n                {props.quantity > 0 ?\n                    <div>\n                        <h5>Available Qty: {props.quantity}</h5> \n                        <Button variant=\"primary\" onClick={ () => editBook(props.book)}>Manage Inventory</Button>\n                        <br/><br/>\n                        <Button className=\"btn btn-danger\" onClick={ () => deleteBook(props.googleId)}>Remove Books</Button>\n                    </div>\n                    : null}\n                {props.quantity < 0 ?\n                <div>\n                    <h5>NOT AVAILABLE</h5> \n                    <Button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Add Book</Button>\n                </div>\n                : null}\n            </Card.Body>\n            </Card>\n        )\n    }\n\nreturn <div className=\"grid\">{props.books.map((book,i) =>{\n    renderCard(book,i)})}</div>\n\n    // return (\n    //     <div className=\"grid\">\n    //         {editedBook ? <Form book={editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null }\n    //         <hr/>\n    //         {\n    //             props.books.map((book,i) => {\n    //                 return <BookCard\n    //                     key={i}\n    //                     googleId={book.googleId}\n    //                     imageUrl={book.imageUrl}\n    //                     title={book.title}\n    //                     authors={book.authors}\n    //                     publishedDate={book.publishedDate}\n    //                     quantity={book.quantity}\n\n    //                     deleteBook={props.deleteBook}\n    //                     editBook={editBook}\n    //                     book={book}\n    //                     />\n                    \n    //             })\n    //         }\n            \n    //     </div>\n\n        \n    // )\n\n\n}\n\nexport default BookList"]},"metadata":{},"sourceType":"module"}