{"ast":null,"code":"var _jsxFileName = \"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport BookCard from './BookCard';\nimport Form from './Form'; // import { Card, CardImg, CardText, CardBlock, CardTitle, CardSubTitle, Button } from 'reactstrap';\n// import { Container, Row, Col } from 'reactstrap';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookList(props) {\n  _s();\n\n  const [editedBook, setEditedBook] = useState(null);\n\n  const editBook = book => {\n    setEditedBook(book);\n  };\n\n  const renderCard = (card, index);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [editedBook ? /*#__PURE__*/_jsxDEV(Form, {\n      book: editedBook,\n      updatedBook: props.updatedBook,\n      insertedBook: props.insertedBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), props.books.map((book, i) => {\n      return /*#__PURE__*/_jsxDEV(BookCard, {\n        googleId: book.googleId,\n        imageUrl: book.imageUrl,\n        title: book.title,\n        authors: book.authors,\n        publishedDate: book.publishedDate,\n        quantity: book.quantity,\n        deleteBook: props.deleteBook,\n        editBook: editBook,\n        book: book\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookList, \"q4OHXJceYElYLnYzNqkqpkDPmy8=\");\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookList.js"],"names":["React","useState","BookCard","Form","BookList","props","editedBook","setEditedBook","editBook","book","renderCard","card","index","updatedBook","insertedBook","books","map","i","googleId","imageUrl","title","authors","publishedDate","quantity","deleteBook"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;AACA;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMO,QAAQ,GAAIC,IAAD,IAAU;AACvBF,IAAAA,aAAa,CAACE,IAAD,CAAb;AACH,GAFD;;AAIA,QAAMC,UAAU,IAAIC,IAAI,EAAEC,KAAV,CAAhB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACKN,UAAU,gBAAG,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,UAAZ;AAAwB,MAAA,WAAW,EAAED,KAAK,CAACQ,WAA3C;AAAwD,MAAA,YAAY,EAAER,KAAK,CAACS;AAA5E;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiG,IADhH,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIQT,KAAK,CAACU,KAAN,CAAYC,GAAZ,CAAgB,CAACP,IAAD,EAAMQ,CAAN,KAAY;AACxB,0BAAO,QAAC,QAAD;AAEH,QAAA,QAAQ,EAAER,IAAI,CAACS,QAFZ;AAGH,QAAA,QAAQ,EAAET,IAAI,CAACU,QAHZ;AAIH,QAAA,KAAK,EAAEV,IAAI,CAACW,KAJT;AAKH,QAAA,OAAO,EAAEX,IAAI,CAACY,OALX;AAMH,QAAA,aAAa,EAAEZ,IAAI,CAACa,aANjB;AAOH,QAAA,QAAQ,EAAEb,IAAI,CAACc,QAPZ;AASH,QAAA,UAAU,EAAElB,KAAK,CAACmB,UATf;AAUH,QAAA,QAAQ,EAAEhB,QAVP;AAWH,QAAA,IAAI,EAAEC;AAXH,SACEQ,CADF;AAAA;AAAA;AAAA;AAAA,cAAP;AAcH,KAfD,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GArCQb,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport {useState} from 'react';\nimport BookCard from './BookCard';\nimport Form from './Form';\n// import { Card, CardImg, CardText, CardBlock, CardTitle, CardSubTitle, Button } from 'reactstrap';\n// import { Container, Row, Col } from 'reactstrap';\n\nfunction BookList(props) {\n\n    const [editedBook, setEditedBook] = useState(null)\n\n    const editBook = (book) => {\n        setEditedBook(book)\n    }\n\n    const renderCard = (card, index)\n\n    return (\n        <div className=\"grid\">\n            {editedBook ? <Form book={editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null }\n            <hr/>\n            {\n                props.books.map((book,i) => {\n                    return <BookCard\n                        key={i}\n                        googleId={book.googleId}\n                        imageUrl={book.imageUrl}\n                        title={book.title}\n                        authors={book.authors}\n                        publishedDate={book.publishedDate}\n                        quantity={book.quantity}\n\n                        deleteBook={props.deleteBook}\n                        editBook={editBook}\n                        book={book}\n                        />\n                    \n                })\n            }\n            \n        </div>\n\n        \n    )\n}\n\nexport default BookList"]},"metadata":{},"sourceType":"module"}