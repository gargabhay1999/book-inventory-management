[{"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/index.js":"1","/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/App.js":"2","/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/reportWebVitals.js":"3","/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/Form.js":"4","/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/APIService.js":"5","/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/Books.js":"6","/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/Header.js":"7","/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/Search.js":"8","/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookList.js":"9","/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookCard.js":"10"},{"size":547,"mtime":1625426251579,"results":"11","hashOfConfig":"12"},{"size":228,"mtime":1625396831208,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1625396831214,"results":"14","hashOfConfig":"12"},{"size":3058,"mtime":1625396831212,"results":"15","hashOfConfig":"12"},{"size":1156,"mtime":1625396831210,"results":"16","hashOfConfig":"12"},{"size":2100,"mtime":1625396831211,"results":"17","hashOfConfig":"12"},{"size":225,"mtime":1625424106379,"results":"18","hashOfConfig":"12"},{"size":532,"mtime":1625431597816,"results":"19","hashOfConfig":"12"},{"size":4618,"mtime":1625433844366,"results":"20","hashOfConfig":"12"},{"size":3222,"mtime":1625433826108,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q5ncxy",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/index.js",[],"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/App.js",[],["46","47"],"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/reportWebVitals.js",[],"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/Form.js",["48"],"import React, { useState, useEffect } from 'react'\nimport APIService from './APIService';\n\nfunction Form(props) {\n\n    const [googleId, setGoogleId] = useState('')\n    const [title, setTitle] = useState('')\n    const [authors, setAuthors] = useState('')\n    const [publishedDate, setPublishedDate] = useState('')\n    const [quantity, setQuantity] = useState('')\n    const [imageUrl, setImageUrl] = useState('')\n\n\n    useEffect(() => {\n        setGoogleId(props.book.googleId)\n        setTitle(props.book.title)\n        setAuthors(props.book.authors)\n        setPublishedDate(props.book.publishedDate)\n        setQuantity(props.book.quantity)\n        setImageUrl(props.book.imageUrl)\n    },[props.book])\n\n    const updateBook = () => {\n        APIService.UpdateBook(props.book.googleId, {googleId, title, authors, publishedDate, quantity, imageUrl })\n            .then(resp => props.updatedBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    const insertBook = () => {\n        console.log(\"sdfafd\")\n        console.log({googleId, title, authors, publishedDate, quantity, imageUrl })\n        APIService.InsertBook({googleId, title, authors, publishedDate, quantity, imageUrl })\n            .then(resp => props.updatedBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    return (\n        <div>\n            {props.book ? (\n                <div className=\"mb-3\">\n                    <label htmlFor=\"title\" className=\"form-label\"> Title</label>\n                    <input type=\"text\" className=\"form-control\"\n                        placeholder=\"Plese Enter Title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n\n                    <label htmlFor=\"authors\" className=\"form-label\"> Author/s</label>\n                    <input type=\"text\" className=\"form-control\" \n                        placeholder=\"Plese Enter Author/s\"\n                        value={authors}\n                        onChange={(e) => setAuthors(e.target.value)}\n                    />\n\n                    <label htmlFor=\"quantity\" className=\"form-label\"> Quantity</label>\n                    <input type=\"number\" className=\"form-control\" min=\"1\"\n                        placeholder=\"Plese Enter Quantity\"\n                        value={quantity>=0 ? quantity:0}\n                        onChange={(e) => setQuantity(e.target.value)}\n                    />\n\n                    {\n                        props.book.quantity != -1 ?\n                            <button\n                                onClick={updateBook}\n                                className=\"btn btn-success mt-3\"\n                            > Update</button>\n                            :\n                            <button\n                                onClick={insertBook}\n                                className=\"btn btn-success mt-3\"\n                            > Insert</button>\n                    }\n\n\n                </div>\n            ) : null}\n\n\n        </div>\n    )\n}\n\nexport default Form\n","/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/APIService.js",[],"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/Books.js",[],"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/Header.js",[],"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/Search.js",[],"/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookList.js",["49","50","51","52","53"],"import React from 'react'\nimport {useState} from 'react';\nimport BookCard from './BookCard';\nimport Form from './Form';\nimport {Card, CardGroup, Button} from 'react-bootstrap';\nimport APIService from '../components/APIService';\nimport { Modal } from 'react-bootstrap';\n\nfunction BookList(props) {\n\n    const [editedBook, setEditedBook] = useState(null)\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const editBook = (book) => {\n        setEditedBook(book)\n        setShow(true)\n    }\n\n    const deleteBook = (googleId) => {\n        console.log(googleId)\n        APIService.DeleteBook(googleId)\n            .then(resp => props.deleteBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    const renderCard = (book, index) => {\n        return (\n            <Card  key={index}>\n            <Card.Img  src={book.imageUrl} />\n            <Card.Body>\n                <Card.Title>{book.title}</Card.Title>\n                <Card.Text>\n                <h5>Authors: {book.authors}</h5>\n                    <br></br>\n                    <h5>Published Date:{book.publishedDate}</h5>\n                    <br></br>\n                </Card.Text>\n                {book.quantity == 0 ?\n                    <div>\n                        <h5 style={{ color: 'red' , fontSize:'18px'}}>OUT OF STOCK</h5> \n                        <Button variant=\"primary\" onClick={ () => editBook(book)}>Manage Inventory</Button>\n                        <br/><br/>\n                        <Button className=\"btn btn-danger\" onClick={ () => deleteBook(book.googleId)}>Remove Books</Button>\n                    </div>\n                    : null}\n                {book.quantity > 0 ?\n                    <div>\n                        <h5 style={{ color: 'green' , fontSize:'18px'}}>Available Qty: {book.quantity}</h5> \n                        <Button variant=\"primary\" onClick={ () => editBook(book)}>Manage Inventory</Button>\n                        <br/><br/>\n                        <Button className=\"btn btn-danger\" onClick={ () => deleteBook(book.googleId)}>Remove Books</Button>\n                    </div>\n                    : null}\n                {book.quantity < 0 ?\n                <div>\n                    <h5 style={{ color: 'indigo' , fontSize:'18px'}}>NOT AVAILABLE</h5> \n                    <Button className=\"btn btn-success\" onClick={ () => editBook(book)}>Add Book</Button>\n                </div>\n                : null}\n                <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                     </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                     </Button>\n                </Modal.Footer>\n            </Modal>\n            </Card.Body>\n            </Card>\n            \n        )\n    }\n\n    // return (\n    //     <div>\n    //         {editedBook ? <Form book={editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null }\n    //         {/* <div className=\"grid\">{props.books.map(renderCard)}</div> */}\n    //         {/* <CardGroup>{props.books.map(renderCard)}</CardGroup> */}\n    //     </div>\n    // )\n    return (\n        <div>\n            {/* {editedBook ? <Form book={editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null } */}\n            <hr/>\n            {\n                props.books.map((book,i) => {\n                    return <BookCard\n                        key={i}\n                        googleId={book.googleId}\n                        imageUrl={book.imageUrl}\n                        title={book.title}\n                        authors={book.authors}\n                        publishedDate={book.publishedDate}\n                        quantity={book.quantity}\n\n                        deleteBook={props.deleteBook}\n                        editBook={editBook}\n                        editedBook={editedBook}\n                        updatedBook={props.updatedBook}\n                        insertedBook={props.insertedBook}\n                        book={book}\n                        />\n                    \n                })\n            }\n            \n        </div>\n\n        \n    )\n}\n\nexport default BookList","/Users/agarg52/Documents/PERSONAL/RESUME/SpoonShot/book-inventory-spoonshot/frontend/src/components/BookCard.js",["54","55","56","57"],"import React from 'react'\nimport {useState} from 'react';\nimport APIService from '../components/APIService';\nimport {Card, Button, Modal} from 'react-bootstrap';\nimport Form from './Form';\n\nfunction BookCard(props) {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const deleteBook = (googleId) => {\n        console.log(googleId)\n        APIService.DeleteBook(googleId)\n            .then(resp => props.deleteBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    const editBook = (book) => {\n        console.log(book)\n        props.editBook(book)\n        // setShow(true)\n    }\n\n    return (\n        <>\n        <div className=\"card-container\" id={props.googleId}>\n            {props.editedBook==props.book ? <Form book={props.editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null }\n            <img src={props.imageUrl} alt=\"\"/>\n            <div className=\"desc\">\n                <h5>Title: {props.title}</h5>\n                <h5>Author: {props.authors}</h5>\n                <h5>Published Date: {props.publishedDate}</h5>\n                {props.quantity == 0 ?\n                    <div>\n                        <h5 style={{ color: 'red' , fontSize:'18px'}}>OUT OF STOCK</h5> \n                        <button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Manage Inventory</button>\n                        <button className=\"btn btn-danger\" onClick={ () => deleteBook(props.googleId)}>Remove Books</button>\n                    </div>\n                    : null}\n                {props.quantity > 0 ?\n                    <div>\n                        <h5 style={{ color: 'green' , fontSize:'18px'}}>Available Qty: {props.quantity}</h5> \n                        <button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Manage Inventory</button>\n                        <button className=\"btn btn-danger\" onClick={ () => deleteBook(props.googleId)}>Remove Books</button>\n                    </div>\n                    : null}\n                {props.quantity < 0 ?\n                <div>\n                    <h5 style={{ color: 'indigo' , fontSize:'18px'}}>NOT AVAILABLE</h5> \n                    <button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Add Book</button>\n                </div>\n                : null}\n                \n            </div>\n            <hr style={{ borderColor: 'orange', backgroundColor: 'green', height: 2}}/>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                     </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                     </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n        </>\n\n    )\n}\n\nexport default BookCard\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":63,"column":45,"nodeType":"64","messageId":"65","endLine":63,"endColumn":47},{"ruleId":"66","severity":1,"message":"67","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":5,"column":15,"nodeType":"68","messageId":"69","endLine":5,"endColumn":24},{"ruleId":"66","severity":1,"message":"71","line":16,"column":11,"nodeType":"68","messageId":"69","endLine":16,"endColumn":21},{"ruleId":"66","severity":1,"message":"72","line":30,"column":11,"nodeType":"68","messageId":"69","endLine":30,"endColumn":21},{"ruleId":"62","severity":1,"message":"73","line":42,"column":32,"nodeType":"64","messageId":"65","endLine":42,"endColumn":34},{"ruleId":"66","severity":1,"message":"74","line":4,"column":9,"nodeType":"68","messageId":"69","endLine":4,"endColumn":13},{"ruleId":"66","severity":1,"message":"71","line":12,"column":11,"nodeType":"68","messageId":"69","endLine":12,"endColumn":21},{"ruleId":"62","severity":1,"message":"73","line":30,"column":30,"nodeType":"64","messageId":"65","endLine":30,"endColumn":32},{"ruleId":"62","severity":1,"message":"73","line":36,"column":33,"nodeType":"64","messageId":"65","endLine":36,"endColumn":35},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'CardGroup' is defined but never used.","'handleShow' is assigned a value but never used.","'renderCard' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]