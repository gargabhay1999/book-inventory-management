{"version":3,"sources":["components/Header.js","components/Search.js","components/APIService.js","components/BookCard.js","components/Form.js","components/BookList.js","components/Books.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Search","props","onSubmit","searchBook","action","type","placeholder","onChange","handleSearch","APIService","body","quantity","fetch","headers","JSON","stringify","then","resp","json","alert","googleId","BookCard","deleteBook","console","log","DeleteBook","catch","error","editBook","book","id","src","imageUrl","alt","title","authors","publishedDate","onClick","Form","useState","setGoogleId","setTitle","setAuthors","setPublishedDate","setQuantity","setImageUrl","useEffect","htmlFor","value","e","target","min","UpdateBook","updatedBook","InsertBook","BookList","editedBook","setEditedBook","insertedBook","books","map","i","Books","setBooks","searchText","setSearchText","preventDefault","new_books","filter","my_book","updatedBooks","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d86295e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () =>{\n    return (\n        <header>\n            <i className=\"fas fa-book\"/>\n            <h1> Welcome to Abhay's Book Inventory</h1>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction Search(props) {\n    return (\n        <div>\n            <div className=\"search-area\">\n                <form onSubmit={props.searchBook} action=\"\" >\n                    <input type=\"text\"\n                    placeholder=\"Search Book\"\n                    onChange={props.handleSearch} />\n                    <button type=\"submit\">Search</button>\n                </form>                \n            </div>\n        </div>\n    )\n}\n\nexport default Search\n","export default class APIService {\n\n    static InsertBook(body) {\n        if(body.quantity <=0){\n            alert(\"Please enter valid quantity\")\n        }\n        else{\n            return fetch(`https://eflask-app-abhay.herokuapp.com/addBook`, {\n                'method': 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            })\n            .then(resp => resp.json())\n        }\n    }\n\n    static DeleteBook(googleId) {\n        return fetch(`https://eflask-app-abhay.herokuapp.com/deleteBookByGoogleId/${googleId}/`, {\n            'method': 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(resp => resp.json())\n    }\n\n    static UpdateBook(googleId, body) {\n        return fetch(`https://eflask-app-abhay.herokuapp.com/updateBookByGoogleId/${googleId}/`, {\n            'method': 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        })\n        .then(resp => resp.json())\n    }\n    \n}\n","import React from 'react'\nimport APIService from '../components/APIService';\n\nfunction BookCard(props) {\n\n    const deleteBook = (googleId) => {\n        console.log(googleId)\n        APIService.DeleteBook(googleId)\n            .then(resp => props.deleteBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    const editBook = (book) => {\n        console.log(book)\n        props.editBook(book)\n    }\n\n    return (\n        <div className=\"card-container\" id={props.googleId}>\n            <img src={props.imageUrl} alt=\"\"/>\n            <div className=\"desc\">\n                <h5>Title: {props.title}</h5>\n                <h5>Author: {props.authors}</h5>\n                <h5>Published Date: {props.publishedDate}</h5>\n                {props.quantity == 0 ?\n                    <div>\n                        <h5>OUT OF STOCK</h5> \n                        <button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Manage Inventory</button>\n                        <button className=\"btn btn-danger\" onClick={ () => deleteBook(props.googleId)}>Remove Books</button>\n                    </div>\n                    : null}\n                {props.quantity > 0 ?\n                    <div>\n                        <h5>Available Qty: {props.quantity}</h5> \n                        <button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Manage Inventory</button>\n                        <button className=\"btn btn-danger\" onClick={ () => deleteBook(props.googleId)}>Remove Books</button>\n                    </div>\n                    : null}\n                {props.quantity < 0 ?\n                <div>\n                    <h5>NOT AVAILABLE</h5> \n                    <button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Add Book</button>\n                </div>\n                : null}\n                \n            </div>\n            <hr/>\n        </div>\n    )\n}\n\nexport default BookCard\n","import React, { useState, useEffect } from 'react'\nimport APIService from './APIService';\n\nfunction Form(props) {\n\n    const [googleId, setGoogleId] = useState('')\n    const [title, setTitle] = useState('')\n    const [authors, setAuthors] = useState('')\n    const [publishedDate, setPublishedDate] = useState('')\n    const [quantity, setQuantity] = useState('')\n    const [imageUrl, setImageUrl] = useState('')\n\n\n    useEffect(() => {\n        setGoogleId(props.book.googleId)\n        setTitle(props.book.title)\n        setAuthors(props.book.authors)\n        setPublishedDate(props.book.publishedDate)\n        setQuantity(props.book.quantity)\n        setImageUrl(props.book.imageUrl)\n    },[props.book])\n\n    const updateBook = () => {\n        APIService.UpdateBook(props.book.googleId, {googleId, title, authors, publishedDate, quantity, imageUrl })\n            .then(resp => props.updatedBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    const insertBook = () => {\n        console.log(\"sdfafd\")\n        console.log({googleId, title, authors, publishedDate, quantity, imageUrl })\n        APIService.InsertBook({googleId, title, authors, publishedDate, quantity, imageUrl })\n            .then(resp => props.updatedBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    return (\n        <div>\n            {props.book ? (\n                <div className=\"mb-3\">\n                    <label htmlFor=\"title\" className=\"form-label\"> Title</label>\n                    <input type=\"text\" className=\"form-control\"\n                        placeholder=\"Plese Enter Title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n\n                    <label htmlFor=\"authors\" className=\"form-label\"> Author/s</label>\n                    <input type=\"text\" className=\"form-control\" \n                        placeholder=\"Plese Enter Author/s\"\n                        value={authors}\n                        onChange={(e) => setAuthors(e.target.value)}\n                    />\n\n                    <label htmlFor=\"quantity\" className=\"form-label\"> Quantity</label>\n                    <input type=\"number\" className=\"form-control\" min=\"1\"\n                        placeholder=\"Plese Enter Quantity\"\n                        value={quantity>=0 ? quantity:0}\n                        onChange={(e) => setQuantity(e.target.value)}\n                    />\n\n                    {\n                        props.book.quantity != -1 ?\n                            <button\n                                onClick={updateBook}\n                                className=\"btn btn-success mt-3\"\n                            > Update</button>\n                            :\n                            <button\n                                onClick={insertBook}\n                                className=\"btn btn-success mt-3\"\n                            > Insert</button>\n                    }\n\n\n                </div>\n            ) : null}\n\n\n        </div>\n    )\n}\n\nexport default Form\n","import React from 'react'\nimport {useState} from 'react';\nimport BookCard from './BookCard';\nimport Form from './Form';\n// import { Card, CardImg, CardText, CardBlock, CardTitle, CardSubTitle, Button } from 'reactstrap';\n// import { Container, Row, Col } from 'reactstrap';\n\nfunction BookList(props) {\n\n    const [editedBook, setEditedBook] = useState(null)\n\n    const editBook = (book) => {\n        setEditedBook(book)\n    }\n\n    // const openForm = () => {\n    //     setEditedBook({title: '', authors: '', quantity: '', googleId: '', imageUrl: '', quantity: ''})\n    // }\n\n    \n\n    return (\n        <div>\n            {editedBook ? <Form book={editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null }\n            <hr/>\n            {\n                props.books.map((book,i) => {\n                    return <BookCard\n                        key={i}\n                        googleId={book.googleId}\n                        imageUrl={book.imageUrl}\n                        title={book.title}\n                        authors={book.authors}\n                        publishedDate={book.publishedDate}\n                        quantity={book.quantity}\n\n                        deleteBook={props.deleteBook}\n                        editBook={editBook}\n                        book={book}\n                        />\n                    \n                })\n            }\n            \n        </div>\n\n        \n    )\n}\n\nexport default BookList","import React from 'react'\nimport { useState, useEffect } from 'react';\nimport Search from './Search';\nimport BookList from './BookList';\n\nfunction Books() {\n\n    const [books, setBooks] = useState([])\n    const [searchText, setSearchText] = useState('')\n\n\n    useEffect(() => {\n        fetch('https://eflask-app-abhay.herokuapp.com/getBooks', {\n            'method': 'GET',\n            headers: {\n                'Content-Type': 'applications/json'\n            }\n        })\n            .then(resp => resp.json())\n            .then(resp => setBooks(resp))\n            .catch(error => console.log(error))\n    }, [])\n\n\n    const searchBook = (e) => {\n        e.preventDefault()\n        console.log(searchBook)\n        return fetch(`https://eflask-app-abhay.herokuapp.com/getFinalBooks?searchText=${searchText}`, {\n            'method': 'GET',\n            headers: {\n                'Content-Type': 'applications/json'\n            }\n        })\n            .then(resp => resp.json())\n            .then(resp => setBooks(resp))\n            .catch(error => console.log(error))\n    }\n\n    const handleSearch = (e) => {\n        setSearchText(e.target.value)\n    }\n\n    const deleteBook = (book) => {\n        const new_books = books.filter(my_book => {\n            if (my_book.googleId === book.googleId) {\n                return false\n            } else {\n                return true\n            }\n        })\n        setBooks(new_books)\n    }\n\n    const updatedBook = (book) => {\n        const updatedBooks = books.map(my_book => {\n            if (my_book.googleId === book.googleId) {\n                return book\n            } else {\n                return my_book\n            }\n        })\n        setBooks(updatedBooks)\n    }\n\n    const insertedBook = (book) => {\n        const new_books = [...books, book]\n        setBooks(new_books)\n      }\n\n    return (\n        <div>\n            <Search handleSearch={handleSearch} searchBook={searchBook} />\n            <BookList books={books} deleteBook={deleteBook} updatedBook={updatedBook} insertedBook={insertedBook} />\n        </div>\n    )\n}\n\nexport default Books\n","import './App.css';\nimport Header from './components/Header';\nimport Books from './components/Books';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Books/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}