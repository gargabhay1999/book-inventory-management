{"version":3,"sources":["components/Header.js","components/Search.js","components/APIService.js","components/Form.js","components/BookCard.js","components/BookList.js","components/Books.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Search","props","onSubmit","searchBook","action","type","placeholder","onChange","handleSearch","APIService","body","quantity","fetch","headers","JSON","stringify","then","resp","json","alert","googleId","Form","useState","setGoogleId","title","setTitle","authors","setAuthors","publishedDate","setPublishedDate","setQuantity","imageUrl","setImageUrl","useEffect","book","htmlFor","value","e","target","min","onClick","UpdateBook","updatedBook","catch","error","console","log","InsertBook","BookCard","show","setShow","handleClose","deleteBook","DeleteBook","editBook","id","editedBook","insertedBook","src","alt","style","borderColor","backgroundColor","height","Modal","onHide","closeButton","Title","Body","Footer","Button","variant","BookList","setEditedBook","books","map","i","Books","setBooks","searchText","setSearchText","preventDefault","new_books","filter","my_book","updatedBooks","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26bfccb0.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () =>{\n    return (\n        <header>\n            <i className=\"fas fa-book\"/>\n            <h1> Welcome to Abhay's Book Inventory</h1>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction Search(props) {\n    return (\n        <div>\n            <div className=\"search-area\">\n                <form onSubmit={props.searchBook} action=\"\" >\n                    <input className=\"searchArea\" type=\"text\"\n                    placeholder=\"Search Book\"\n                    onChange={props.handleSearch} />\n                    <button className=\"btn btn-info\" type=\"submit\">Search</button>\n                </form>                \n            </div>\n        </div>\n    )\n}\n\nexport default Search\n","export default class APIService {\n\n    static InsertBook(body) {\n        if(body.quantity <=0){\n            alert(\"Please enter valid quantity\")\n        }\n        else{\n            return fetch(`https://eflask-app-abhay.herokuapp.com/addBook`, {\n                'method': 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            })\n            .then(resp => resp.json())\n        }\n    }\n\n    static DeleteBook(googleId) {\n        return fetch(`https://eflask-app-abhay.herokuapp.com/deleteBookByGoogleId/${googleId}/`, {\n            'method': 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(resp => resp.json())\n    }\n\n    static UpdateBook(googleId, body) {\n        return fetch(`https://eflask-app-abhay.herokuapp.com/updateBookByGoogleId/${googleId}/`, {\n            'method': 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        })\n        .then(resp => resp.json())\n    }\n    \n}\n","import React, { useState, useEffect } from 'react'\nimport APIService from './APIService';\n\nfunction Form(props) {\n\n    const [googleId, setGoogleId] = useState('')\n    const [title, setTitle] = useState('')\n    const [authors, setAuthors] = useState('')\n    const [publishedDate, setPublishedDate] = useState('')\n    const [quantity, setQuantity] = useState('')\n    const [imageUrl, setImageUrl] = useState('')\n\n\n    useEffect(() => {\n        setGoogleId(props.book.googleId)\n        setTitle(props.book.title)\n        setAuthors(props.book.authors)\n        setPublishedDate(props.book.publishedDate)\n        setQuantity(props.book.quantity)\n        setImageUrl(props.book.imageUrl)\n    },[props.book])\n\n    const updateBook = () => {\n        APIService.UpdateBook(props.book.googleId, {googleId, title, authors, publishedDate, quantity, imageUrl })\n            .then(resp => props.updatedBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    const insertBook = () => {\n        console.log(\"sdfafd\")\n        console.log({googleId, title, authors, publishedDate, quantity, imageUrl })\n        APIService.InsertBook({googleId, title, authors, publishedDate, quantity, imageUrl })\n            .then(resp => props.updatedBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    return (\n        <div>\n            {props.book ? (\n                <div className=\"mb-3\">\n                    <label htmlFor=\"title\" className=\"form-label\"> Title</label>\n                    <input type=\"text\" className=\"form-control\"\n                        placeholder=\"Plese Enter Title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n\n                    <label htmlFor=\"authors\" className=\"form-label\"> Author/s</label>\n                    <input type=\"text\" className=\"form-control\" \n                        placeholder=\"Plese Enter Author/s\"\n                        value={authors}\n                        onChange={(e) => setAuthors(e.target.value)}\n                    />\n\n                    <label htmlFor=\"quantity\" className=\"form-label\"> Quantity</label>\n                    <input type=\"number\" className=\"form-control\" min=\"1\"\n                        placeholder=\"Plese Enter Quantity\"\n                        value={quantity>=0 ? quantity:0}\n                        onChange={(e) => setQuantity(e.target.value)}\n                    />\n\n                    {\n                        props.book.quantity != -1 ?\n                            <button\n                                onClick={updateBook}\n                                className=\"btn btn-success mt-3\"\n                            > Update</button>\n                            :\n                            <button\n                                onClick={insertBook}\n                                className=\"btn btn-success mt-3\"\n                            > Insert</button>\n                    }\n\n\n                </div>\n            ) : null}\n\n\n        </div>\n    )\n}\n\nexport default Form\n","import React from 'react'\nimport {useState} from 'react';\nimport APIService from '../components/APIService';\nimport {Card, Button, Modal} from 'react-bootstrap';\nimport Form from './Form';\n\nfunction BookCard(props) {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const deleteBook = (googleId) => {\n        console.log(googleId)\n        APIService.DeleteBook(googleId)\n            .then(resp => props.deleteBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    const editBook = (book) => {\n        console.log(book)\n        props.editBook(book)\n        // setShow(true)\n    }\n\n    return (\n        <>\n        <div className=\"card-container\" id={props.googleId}>\n            {props.editedBook==props.book ? <Form book={props.editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null }\n            <img src={props.imageUrl} alt=\"\"/>\n            <div className=\"desc\">\n                <h5>Title: {props.title}</h5>\n                <h5>Author: {props.authors}</h5>\n                <h5>Published Date: {props.publishedDate}</h5>\n                {props.quantity == 0 ?\n                    <div>\n                        <h5>OUT OF STOCK</h5> \n                        <button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Manage Inventory</button>\n                        <button className=\"btn btn-danger\" onClick={ () => deleteBook(props.googleId)}>Remove Books</button>\n                    </div>\n                    : null}\n                {props.quantity > 0 ?\n                    <div>\n                        <h5>Available Qty: {props.quantity}</h5> \n                        <button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Manage Inventory</button>\n                        <button className=\"btn btn-danger\" onClick={ () => deleteBook(props.googleId)}>Remove Books</button>\n                    </div>\n                    : null}\n                {props.quantity < 0 ?\n                <div>\n                    <h5>NOT AVAILABLE</h5> \n                    <button className=\"btn btn-success\" onClick={ () => editBook(props.book)}>Add Book</button>\n                </div>\n                : null}\n                \n            </div>\n            <hr style={{ borderColor: 'orange', backgroundColor: 'green', height: 2}}/>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                     </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                     </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n        </>\n\n    )\n}\n\nexport default BookCard\n","import React from 'react'\nimport {useState} from 'react';\nimport BookCard from './BookCard';\nimport Form from './Form';\nimport {Card, CardGroup, Button} from 'react-bootstrap';\nimport APIService from '../components/APIService';\nimport { Modal } from 'react-bootstrap';\n\nfunction BookList(props) {\n\n    const [editedBook, setEditedBook] = useState(null)\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const editBook = (book) => {\n        setEditedBook(book)\n        setShow(true)\n    }\n\n    const deleteBook = (googleId) => {\n        console.log(googleId)\n        APIService.DeleteBook(googleId)\n            .then(resp => props.deleteBook(resp))\n            .catch(error => console.log(error))\n    }\n\n    const renderCard = (book, index) => {\n        return (\n            <Card  key={index}>\n            <Card.Img  src={book.imageUrl} />\n            <Card.Body>\n                <Card.Title>{book.title}</Card.Title>\n                <Card.Text>\n                <h5>Authors: {book.authors}</h5>\n                    <br></br>\n                    <h5>Published Date:{book.publishedDate}</h5>\n                    <br></br>\n                </Card.Text>\n                {book.quantity == 0 ?\n                    <div>\n                        <h5 style={{ color: 'red' , fontSize:'18px'}}>OUT OF STOCK</h5> \n                        <Button variant=\"primary\" onClick={ () => editBook(book)}>Manage Inventory</Button>\n                        <br/><br/>\n                        <Button className=\"btn btn-danger\" onClick={ () => deleteBook(book.googleId)}>Remove Books</Button>\n                    </div>\n                    : null}\n                {book.quantity > 0 ?\n                    <div>\n                        <h5 style={{ color: 'green' , fontSize:'18px'}}>Available Qty: {book.quantity}</h5> \n                        <Button variant=\"primary\" onClick={ () => editBook(book)}>Manage Inventory</Button>\n                        <br/><br/>\n                        <Button className=\"btn btn-danger\" onClick={ () => deleteBook(book.googleId)}>Remove Books</Button>\n                    </div>\n                    : null}\n                {book.quantity < 0 ?\n                <div>\n                    <h5>NOT AVAILABLE</h5> \n                    <Button className=\"btn btn-success\" onClick={ () => editBook(book)}>Add Book</Button>\n                </div>\n                : null}\n                <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                     </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                     </Button>\n                </Modal.Footer>\n            </Modal>\n            </Card.Body>\n            </Card>\n            \n        )\n    }\n\n    // return (\n    //     <div>\n    //         {editedBook ? <Form book={editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null }\n    //         {/* <div className=\"grid\">{props.books.map(renderCard)}</div> */}\n    //         {/* <CardGroup>{props.books.map(renderCard)}</CardGroup> */}\n    //     </div>\n    // )\n    return (\n        <div>\n            {/* {editedBook ? <Form book={editedBook} updatedBook={props.updatedBook} insertedBook={props.insertedBook}/> : null } */}\n            <hr/>\n            {\n                props.books.map((book,i) => {\n                    return <BookCard\n                        key={i}\n                        googleId={book.googleId}\n                        imageUrl={book.imageUrl}\n                        title={book.title}\n                        authors={book.authors}\n                        publishedDate={book.publishedDate}\n                        quantity={book.quantity}\n\n                        deleteBook={props.deleteBook}\n                        editBook={editBook}\n                        editedBook={editedBook}\n                        updatedBook={props.updatedBook}\n                        insertedBook={props.insertedBook}\n                        book={book}\n                        />\n                    \n                })\n            }\n            \n        </div>\n\n        \n    )\n}\n\nexport default BookList","import React from 'react'\nimport { useState, useEffect } from 'react';\nimport Search from './Search';\nimport BookList from './BookList';\n\nfunction Books() {\n\n    const [books, setBooks] = useState([])\n    const [searchText, setSearchText] = useState('')\n\n\n    useEffect(() => {\n        fetch('https://eflask-app-abhay.herokuapp.com/getBooks', {\n            'method': 'GET',\n            headers: {\n                'Content-Type': 'applications/json'\n            }\n        })\n            .then(resp => resp.json())\n            .then(resp => setBooks(resp))\n            .catch(error => console.log(error))\n    }, [])\n\n\n    const searchBook = (e) => {\n        e.preventDefault()\n        console.log(searchBook)\n        return fetch(`https://eflask-app-abhay.herokuapp.com/getFinalBooks?searchText=${searchText}`, {\n            'method': 'GET',\n            headers: {\n                'Content-Type': 'applications/json'\n            }\n        })\n            .then(resp => resp.json())\n            .then(resp => setBooks(resp))\n            .catch(error => console.log(error))\n    }\n\n    const handleSearch = (e) => {\n        setSearchText(e.target.value)\n    }\n\n    const deleteBook = (book) => {\n        const new_books = books.filter(my_book => {\n            if (my_book.googleId === book.googleId) {\n                return false\n            } else {\n                return true\n            }\n        })\n        setBooks(new_books)\n    }\n\n    const updatedBook = (book) => {\n        const updatedBooks = books.map(my_book => {\n            if (my_book.googleId === book.googleId) {\n                return book\n            } else {\n                return my_book\n            }\n        })\n        setBooks(updatedBooks)\n    }\n\n    const insertedBook = (book) => {\n        const new_books = [...books, book]\n        setBooks(new_books)\n      }\n\n    return (\n        <div>\n            <Search handleSearch={handleSearch} searchBook={searchBook} />\n            <BookList books={books} deleteBook={deleteBook} updatedBook={updatedBook} insertedBook={insertedBook} />\n        </div>\n    )\n}\n\nexport default Books\n","import './App.css';\nimport Header from './components/Header';\nimport Books from './components/Books';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Books/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}